# coding=utf-8
""""
---Main file---

By BlockMaster
"""

import telebot as tb
from logic import calculate, find_match, NoCloseMatchException
from db_manager import DB
from bot_token import TOKEN

bot = tb.TeleBot(TOKEN)

status = ""
data = []
db = DB()


@bot.message_handler(commands=["start", "help"])
def start(msg):
    bot.send_message(msg.chat.id, """–ü—Ä–∏–≤–µ—Ç! üëã
–≠—Ç–æ –±–æ—Ç –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è –≤–æ–∑–¥—É—Ö–∞!

ü§ñ –ö–æ–º–∞–Ω–¥—ã:

/start - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—â—ë —Ä–∞–∑
/calculate - –Ω–∞—á–∞—Ç—å —Ä–∞—Å—á—ë—Ç
/normal - –ø–æ–ª—É—á–∏—Ç—å —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è –≤ —Å–≤–æ–µ–π —Å—Ç—Ä–∞–Ω–µ
/info - —á—Ç–æ —Ç–∞–∫–æ–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ""")


@bot.message_handler(commands=["calculate"])
def calculate_(msg):
    global status
    bot.send_message(msg.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ø—Ä–æ–µ—Ö–∞–ª–∏ –Ω–∞ –ª–∏—á–Ω–æ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ")
    status = "private_transport"


@bot.message_handler(commands=["info"])
def info(msg):
    bot.send_message(msg.chat.id, """üåç –ß—Ç–æ —Ç–∞–∫–æ–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ?

–ì–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ ‚Äî —ç—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–≤—ã—à–µ–Ω–∏—è —Å—Ä–µ–¥–Ω–µ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –ó–µ–º–ª–∏, –æ–±—É—Å–ª–æ–≤–ª–µ–Ω–Ω—ã–π —É–≤–µ–ª–∏—á–µ–Ω–∏–µ–º –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏ –ø–∞—Ä–Ω–∏–∫–æ–≤—ã—Ö –≥–∞–∑–æ–≤ –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ –∏–∑-–∑–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.

üí° –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏—è –≤–∫–ª—é—á–∞—é—Ç:

    –°–∂–∏–≥–∞–Ω–∏–µ –∏—Å–∫–æ–ø–∞–µ–º—ã—Ö —Ç–æ–ø–ª–∏–≤: –î–æ–±—ã—á–∞ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —É–≥–ª—è, –Ω–µ—Ñ—Ç–∏ –∏ –≥–∞–∑–∞ –≤—ã–¥–µ–ª—è—é—Ç –±–æ–ª—å—à–∏–µ –æ–±—ä–µ–º—ã —É–≥–ª–µ–∫–∏—Å–ª–æ–≥–æ –≥–∞–∑–∞ (CO‚ÇÇ), —á—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —É—Å–∏–ª–µ–Ω–∏—é –ø–∞—Ä–Ω–∏–∫–æ–≤–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞.

    –í—ã—Ä—É–±–∫–∞ –ª–µ—Å–æ–≤: –õ–µ—Å–∞ –∏–≥—Ä–∞—é—Ç –∫–ª—é—á–µ–≤—É—é —Ä–æ–ª—å –≤ –ø–æ–≥–ª–æ—â–µ–Ω–∏–∏ CO‚ÇÇ. –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –∑–µ–ª–µ–Ω—ã—Ö –Ω–∞—Å–∞–∂–¥–µ–Ω–∏–π —É–º–µ–Ω—å—à–∞–µ—Ç —ç—Ç—É —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∏, —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å —É–≥–ª–µ–∫–∏—Å–ª–æ–≥–æ –≥–∞–∑–∞ –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ.

    –°–µ–ª—å—Å–∫–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ: –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–µ—Ç–æ–¥—ã –≤–µ–¥–µ–Ω–∏—è —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞, —Ç–∞–∫–∏–µ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —É–¥–æ–±—Ä–µ–Ω–∏–π –∏ –º–µ—Ç–∞–Ω, –≤—ã–¥–µ–ª—è–µ–º—ã–π —Å–∫–æ—Ç–æ–º, —Ç–∞–∫–∂–µ —Å–ø–æ—Å–æ–±—Å—Ç–≤—É—é—Ç –≤—ã–±—Ä–æ—Å–∞–º –ø–∞—Ä–Ω–∏–∫–æ–≤—ã—Ö –≥–∞–∑–æ–≤.

üö® –ü–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ?

    –ì–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —Ä—è–¥—É —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π, –≤–∫–ª—é—á–∞—è:

    –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∏–º–∞—Ç–∞ (–±–æ–ª—å—à–µ —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö –ø–æ–≥–æ–¥–Ω—ã—Ö —è–≤–ª–µ–Ω–∏–π, —Ç–∞–∫–∏—Ö –∫–∞–∫ —É—Ä–∞–≥–∞–Ω—ã, –∑–∞—Å—É—Ö–∏ –∏ –Ω–∞–≤–æ–¥–Ω–µ–Ω–∏—è)

    –ü–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –æ–∫–µ–∞–Ω–æ–≤ (–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Ç–∞—è–Ω–∏—è –ª–µ–¥–Ω–∏–∫–æ–≤ –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –≤–æ–¥—ã –ø—Ä–∏ –Ω–∞–≥—Ä–µ–≤–∞–Ω–∏–∏)

    –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ —ç–∫–æ—Å–∏—Å—Ç–µ–º –∏ —É–≥—Ä–æ–∑—ã –¥–ª—è –±–∏–æ—Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è (–º–Ω–æ–≥–∏–µ –≤–∏–¥—ã –∂–∏–≤–æ—Ç–Ω—ã—Ö –∏ —Ä–∞—Å—Ç–µ–Ω–∏–π –º–æ–≥—É—Ç –Ω–µ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º —Å—Ä–µ–¥—ã)

üå± –ß—Ç–æ –º—ã –º–æ–∂–µ–º —Å–¥–µ–ª–∞—Ç—å?

    –ö–∞–∂–¥—ã–π –∏–∑ –Ω–∞—Å –º–æ–∂–µ—Ç –≤–Ω–µ—Å—Ç–∏ —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ –±–æ—Ä—å–±—É —Å –≥–ª–æ–±–∞–ª—å–Ω—ã–º –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ–º:

    –°–æ–∫—Ä–∞—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏—Å–∫–æ–ø–∞–µ–º—ã—Ö —Ç–æ–ø–ª–∏–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –Ω–∞ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∏–ª–∏ —ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª–∏).

    –ü–æ–¥–¥–µ—Ä–∂–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç—ã –ø–æ –æ–∑–µ–ª–µ–Ω–µ–Ω–∏—é –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—é –ª–µ—Å–æ–≤.

    –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ —ç–∫–æ–Ω–æ–º—å—Ç–µ —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏—é.

    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ —É—Å—Ç–æ–π—á–∏–≤—ã–µ —Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ –∏–∑–±–µ–≥–∞–π—Ç–µ –∏–∑–±—ã—Ç–∫–∞ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –º—è—Å–∞.
    
–î–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ –Ω–∞—à–µ–π –ø–ª–∞–Ω–µ—Ç–µ! üåèüíö""")


@bot.message_handler(commands=["normal"])
def normal(msg):
    global status
    bot.send_message(msg.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º")
    status = "country"


@bot.message_handler(func=lambda msg: True)
def input_(msg):
    global status, data
    match status:
        case "private_transport":
            try:
                data.append(int(msg.text))
            except ValueError:
                bot.send_message(msg.chat.id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ! –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ø—Ä–æ–µ—Ö–∞–ª–∏ –Ω–∞ –ª–∏—á–Ω–æ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ")
                return
            status = "social_transport"
            bot.send_message(msg.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ø—Ä–æ–µ—Ö–∞–ª–∏ –Ω–∞ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ")
            return
        
        case "social_transport":
            try:
                data.append(int(msg.text))
            except ValueError:
                bot.send_message(msg.chat.id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ! –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ø—Ä–æ–µ—Ö–∞–ª–∏ –Ω–∞ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ")
                return
            status = "food_type"
            bot.send_message(msg.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ —Ç–∏–ø –≤–∞—à–µ–π –¥–∏–µ—Ç—ã. –í–∞—Ä–∏–∞–Ω—Ç—ã - –í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∞—è/–û–±—ã—á–Ω–∞—è")
            return
        
        case "food_type":
            if not msg.text in ["–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∞—è", "–û–±—ã—á–Ω–∞—è"]:
                bot.send_message(msg.chat.id, "–¢–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç! –ù–∞–ø–∏—à–∏—Ç–µ —Ç–∏–ø –≤–∞—à–µ–π –¥–∏–µ—Ç—ã. –í–∞—Ä–∏–∞–Ω—Ç—ã - –í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∞—è/–û–±—ã—á–Ω–∞—è")
                return
            if msg.text == "–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∞—è":
                data.append(True)
            else:
                data.append(False)
            status = "at_home"
            bot.send_message(msg.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏—ë–º–æ–≤ –ø–∏—â–∏ –¥–æ–º–∞")
            return
        
        case "at_home":
            try:
                data.append(int(msg.text))
            except ValueError:
                bot.send_message(msg.chat.id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ! –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏—ë–º–æ–≤ –ø–∏—â–∏ –¥–æ–º–∞")
                return
            status = "at_restaurant"
            bot.send_message(msg.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏—ë–º–æ–≤ –ø–∏—â–∏ –≤ –∫–∞—Ñ–µ/—Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ")
            return
        
        case "at_restaurant":
            try:
                data.append(int(msg.text))
            except ValueError:
                bot.send_message(msg.chat.id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ! –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏—ë–º–æ–≤ –ø–∏—â–∏ –≤ –∫–∞—Ñ–µ/—Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ")
                return
            status = "kwats"
            bot.send_message(msg.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∏–ª–æ–≤–∞—Ç—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –∏–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–ª–∏")
            return
        
        case "kwats":
            try:
                data.append(int(msg.text))
            except ValueError:
                bot.send_message(msg.chat.id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ! –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∏–ª–æ–≤–∞—Ç—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –∏–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–ª–∏")
                return
            status = ""
            result = calculate(data[0], data[1], data[2], data[3], data[4], data[5])
            data.clear()
            bot.send_message(msg.chat.id, f"""–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:
            
–õ–∏—á–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç: {result["private_km"]}–≥, {round(result["private_km_per"])}% –æ—Ç –≤—Å–µ–≥–æ
–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç: {result["community_km"]}–≥, {round(result["community_km_per"])}% –æ—Ç –≤—Å–µ–≥–æ
–ï–¥–∞ –¥–æ–º–∞: {result["at_home"]}–≥, {round(result["at_home_per"])}% –æ—Ç –≤—Å–µ–≥–æ
–ï–¥–∞ –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ/–∫–∞—Ñ–µ: {result["at_restaurant"]}–≥, {round(result["at_restaurant_per"])}% –æ—Ç –≤—Å–µ–≥–æ
–≠–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏—è: {result["kw"]}–≥, {round(result["kw_per"])}% –æ—Ç –≤—Å–µ–≥–æ
–ò—Ç–æ–≥–æ: {result["all"]}–≥

–°—Ä–µ–¥–Ω–µ–µ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–µ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞ - /normal
–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –∑–∞–Ω–æ–≤–æ - /calculate
""")
            return
        
        case "country":
            inp = msg.text
            try:
                real_country = find_match(inp)
            except NoCloseMatchException:
                bot.send_message(msg.chat.id, "–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø—Ä–æ —Ç–∞–∫—É—é —Å—Ç—Ä–∞–Ω—É. –í–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ")
                return
            res = db.get_CO2_per_month(real_country)
            bot.send_message(msg.chat.id, f"–°—Ä–µ–¥–Ω–µ–µ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–µ –æ–¥–Ω–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º –∑–∞ –º–µ—Å—è—Ü –≤ —Å—Ç—Ä–∞–Ω–µ {real_country} - {res}–≥")
            status = ""


bot.infinity_polling()
